---
sudo: required
language: objective-c

# Reference for OS X Versions:
# https://docs.travis-ci.com/user/reference/osx/#OS-X-Version
matrix:
  include:
    # High Sierra (10.13)
    - os: osx
      osx_image: xcode9.3beta
    # Sierra (10.12)
    - os: osx
      osx_image: xcode9.2
    # El Capitan (10.11)
    - os: osx
      osx_image: xcode8
    # Yosemite (10.10)
    - os: osx
      osx_image: xcode6.4

before_install:
  # Consistent Ruby version for dealing w/ initial Homebrew installation.
  - rvm install ruby-2.4.2
  - rvm use ruby-2.4.2

  # Keep Python and OpenSSL libraries up-to-date
  - brew upgrade openssl || brew install openssl || true
  - brew upgrade python || brew install python || true

  # Use a virtualenv for sane(r) dependency management
  - sudo -H pip install -U virtualenv
  - virtualenv --python=/usr/local/bin/python2.7 .venv
  - source .venv/bin/activate

  # Not sure if necessary but covering bases
  - pip install ansible pyOpenSSL

  # Show Python's detected SSL version
  - python -c "import ssl; print(ssl.OPENSSL_VERSION)"

  # Install dependency roles (system Python uses old SSL library)
  - ansible-galaxy install -r requirements.yml -p ./roles

  # Leaving the virtualenv, since switching to system Python
  - deactivate

  # Uninstall existing brew installation.
  - curl -sLO https://raw.githubusercontent.com/Homebrew/install/master/uninstall
  - chmod +x ./uninstall
  - ./uninstall --force
  - sudo rm -rf /usr/local/Homebrew
  - sudo rm -rf /usr/local/Caskroom
  - sudo rm -rf /usr/local/bin/brew

install:
  # Install pip.
  - sudo easy_install pip

  # Install Ansible.
  - sudo -H pip install ansible

  # Add ansible.cfg to pick up roles path.
  - "{ echo '[defaults]'; echo 'roles_path = ../:../roles:./roles'; } >> ansible.cfg"

  # Add a hosts file.
  - sudo mkdir -p /etc/ansible
  - sudo touch /etc/ansible/hosts
  - "echo -e '[local]\nlocalhost ansible_connection=local' | sudo tee -a /etc/ansible/hosts > /dev/null"

script:
  # Check the role/playbook's syntax.
  - "ansible-playbook tests/test.yml --syntax-check"

  # Test the playbook.
  - "ansible-playbook tests/test.yml"

  # Test the playbook's idempotence.
  - idempotence=$(mktemp /tmp/ansible-role-homebrew.XXXXXX)
  - "ansible-playbook tests/test.yml | tee -a ${idempotence}"
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
