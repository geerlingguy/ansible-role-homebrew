---
- name: Setup homebrew install path.
  file:
    path: "{{ homebrew_install_path }}"
    group: admin
    mode: 0775
    state: directory
  become: true

- name: Ensure homebrew is installed.
  git:
    repo: git://github.com/Homebrew/homebrew.git
    version: master
    dest: "{{ homebrew_install_path }}"
    update: no
    accept_hostkey: yes
    depth: 1

- name: Ensure proper permissions on homebrew_brew_bin_path dirs.
  file:
    path: "{{ homebrew_brew_bin_path }}"
    group: admin
    mode: 0775
    state: directory
    recurse: true
  become: true

- name: Check if homebrew binary is already in place.
  stat: "path={{ homebrew_brew_bin_path }}/brew"
  register: homebrew_binary

- name: Symlink brew to homebrew_brew_bin_path.
  file:
    src: "{{ homebrew_install_path }}/bin/brew"
    dest: "{{ homebrew_brew_bin_path }}/brew"
    state: link
  when: homebrew_binary.stat.exists == false
  become: true

# Tap.
- name: Ensure configured taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  with_items: homebrew_taps

# Brew.
- name: Ensure configured homebrew packages are installed.
  homebrew: "name={{ item }} state=present"
  with_items: homebrew_installed_packages

- name: Upgrade all homebrew packages (if configured).
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages

# Cask.
- name: Get list of apps installed with cask.
  command: >
    bash -l -c '{{ homebrew_brew_bin_path }}/brew cask list'
  register: homebrew_cask_list
  always_run: yes
  changed_when: false

# Use command module instead of homebrew_cask so appdir can be used.
- name: Install configured cask applications.
  command: >
    bash -l -c '{{ homebrew_brew_bin_path }}/brew cask install {{ item }} --appdir={{ homebrew_cask_appdir }}'
  with_items: homebrew_cask_apps
  when: "'{{ item }}' not in homebrew_cask_list.stdout"

- name: Check for Brewfile.
  stat:
    path: "{{ homebrew_brewfile_dir }}/Brewfile"
  register: homebrew_brewfile

- name: Install from Brewfile.
  command: "brew bundle chdir={{ homebrew_brewfile_dir }}"
  when: homebrew_brewfile.stat.exists and homebrew_use_brewfile
